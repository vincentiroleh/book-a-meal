{"version":3,"sources":["../../api/controllers/meal.controller.js"],"names":["MealController","req","res","status","send","message","data","Meals","id","parseInt","params","map","meal","foundMeal","body","name","size","price","success","newMeal","length","push","mealFound","itemIndex","index","updatedMeal","splice","mealController"],"mappings":"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","sourcesContent":["/* eslint-disable consistent-return */\n/* eslint-disable array-callback-return */\n/* eslint-disable class-methods-use-this */\nimport Meals from '../utils/mealDb';\n\nclass MealController {\n  // Get all the meal options\n  getAllMeals(req, res) {\n    return res.status(200).send({\n      status: 'true',\n      message: 'meals retrieved successfully',\n      data: Meals,\n    });\n  }\n\n  // Get a single meal option\n  getMeal(req, res) {\n    const id = parseInt(req.params.id, 10);\n\n    Meals.map((meal) => {\n      const foundMeal = meal;\n      if (meal.id === id) {\n        return res.status(200).send({\n          status: 'true',\n          message: 'meal retrieved successfully',\n          foundMeal,\n        });\n      }\n    });\n    return res.status(404).send({\n      status: 'false',\n      message: 'Meal does not exist',\n    });\n  }\n\n  // Add a meal option\n  createMeal(req, res) {\n    if (!req.body.name) {\n      return res.status(400).send({\n        status: 'false',\n        message: 'name of food is required',\n      });\n    }\n    if (!req.body.size) {\n      return res.status(400).send({\n        status: 'false',\n        message: 'size of food is required',\n      });\n    }\n    if (!req.body.price) {\n      return res.status(400).send({\n        success: 'false',\n        message: 'price of food is required',\n      });\n    }\n    const newMeal = {\n      id: Meals.length + 1,\n      name: req.body.name,\n      size: req.body.size,\n      price: req.body.price,\n    };\n    Meals.push(newMeal);\n    return res.status(201).send({\n      status: 'true',\n      message: 'Meals added successfully',\n      newMeal,\n    });\n  }\n\n  // Update the information of a meal option\n  updateMeal(req, res) {\n    const id = parseInt(req.params.id, 10);\n\n    let mealFound;\n    let itemIndex;\n\n    Meals.map((meal, index) => {\n      if (meal.id === id) {\n        mealFound = meal;\n        itemIndex = index;\n      }\n    });\n    // handing errors\n    if (!mealFound) {\n      return res.status(404).send({\n        status: 'false',\n        message: 'Meal not found',\n      });\n    }\n    if (!req.body.name) {\n      return res.status(400).send({\n        status: 'false',\n        message: 'name is required',\n      });\n    }\n    if (!req.body.size) {\n      return res.status(400).send({\n        status: 'false',\n        message: 'size is required',\n      });\n    }\n    if (!req.body.price) {\n      return res.status(400).send({\n        status: 'false',\n        message: 'price is required',\n      });\n    }\n\n    const updatedMeal = {\n      id: mealFound.id,\n      name: req.body.name || mealFound.name,\n      size: req.body.size || mealFound.size,\n      price: req.body.price || mealFound.price,\n    };\n\n    Meals.splice(itemIndex, 1, updatedMeal);\n\n    return res.status(201).send({\n      status: 'true',\n      message: 'Meal updated successfully',\n      updatedMeal,\n    });\n  }\n\n  // Remove a meal option\n  deleteMeal(req, res) {\n    const id = parseInt(req.params.id, 10);\n\n    let foundMeal;\n    let itemIndex;\n\n    Meals.map((meal, index) => {\n      if (meal.id === id) {\n        foundMeal = meal;\n        itemIndex = index;\n      }\n    });\n\n    if (!foundMeal) {\n      return res.status(404).send({\n        status: 'false',\n        message: 'Meal not found',\n      });\n    }\n    Meals.splice(itemIndex, 1);\n\n    return res.status(200).send({\n      status: 'true',\n      message: 'Meal deleted successfully',\n    });\n  }\n}\n\nconst mealController = new MealController();\n\nexport default mealController;\n"],"file":"meal.controller.js"}